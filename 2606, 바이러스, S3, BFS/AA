import sys
from _collections import deque
sys.stdin = open("input.txt", "rt")

def DFS(graph, start = 1):
    stack = [start]
    visited = []
    cnt = 0

    while stack:
        now = stack.pop()
        if now not in visited:
           cnt += 1
           visited.append(now)
           stack.extend(reversed(graph[now]))

    return cnt-1

def BFS(graph, start = 1):
    queue = deque([start])
    visited = []
    cnt = 0

    while queue:
        now = queue.popleft()
        if now not in visited:
           cnt += 1
           visited.append(now)
           queue.extend(sorted(graph[now]))

    return cnt-1

N = int(input())
M = int(input())

graph = [[] for _ in range(N+1)]

for _ in range(M):
    a, b = map(int,input().split())
    graph[a].append(b)
    graph[b].append(a)

print(DFS(graph))
#print(BFS(graph))