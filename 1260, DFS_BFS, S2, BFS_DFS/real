from _collections import deque
import sys
#input = sys.stdin.readline
sys.stdin = open("input.txt", "rt")


def BFS(graph, root):
    queue = deque([root])
    visited = []
    while queue:
        node = queue.popleft()
        if node not in visited:
            visited.append(node)
            queue.extend(sorted(graph[node]))
            print(node, end = " ")


def DFS(graph,  root):
    stack = [root]
    visited = []
    while stack:
        node = stack.pop()
        if node not in visited:
            visited.append(node)
            stack.extend(sorted(graph[node], reverse=True))
            print(node, end = " ")


N, M, V = map(int, input().split())
graph = [[] for _ in range(N+1)]

for _ in range(M):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)

DFS(graph, V)
print()
BFS(graph, V)